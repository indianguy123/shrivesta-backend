generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  orders    Order[]
  cartItems CartItem[]
}

enum UserRole {
  USER
  ADMIN
}

model Order {
  id             Int         @id @default(autoincrement())
  user           User        @relation(fields: [userId], references: [id])
  userId         Int
  totalAmount    Float
  paymentStatus  String      @default("Pending")
  deliveryStatus String      @default("Processing")
  items          OrderItem[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

// imageSrc:
//       "https://slimages.macysassets.com/is/image/MCY/products/0/optimized/31719270_fpx.tif?qlt=80,0&resMode=sharp2&op_usm=1.75,0.3,2,0&fmt=webp&wid=342&hei=417",
//     product: "BOSS by Hugo Boss",
//     id:1,
//     subtitle: "Logo T-Shirt",
//     oldPrice: 5311,
//     vipPrice: 3160,
//     salePrice: 4514,
//     discountPercent: 41,
//     rating: 4,
//     ratingCount: 93,
//     colors: ["#E9EFFF", "#212121", "#9FACDF"],
//     subcategory: "short-kurti"

model Product {
  id          Int         @id @default(autoincrement())
  product     String
  subtitle    String
  oldPrice    Float
  salePrice   Int
  rating      Int
  ratingCount Int
  subcategory String
  imageUrl    String[]
  orderItems  OrderItem[]
  cartItems   CartItem[]
}

//user have many orders,order contian multiple orders,a prduct can be bought multiple times

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId]) // ensures a user can't have the same product twice
}
